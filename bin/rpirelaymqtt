#!/usr/bin/env python 

import paho.mqtt.client as mqtt
import paho.mqtt.publish as publish
import logging
import os
import signal
import sys
from relayboard import RelayBoard

HOSTNAME = "127.0.0.1"
DEFAULT_IDENTITY = "rpirelaymqtt"
USERNAME = ""
PASSWORD = ""
CONFIG_FILE = ""
LOG_FILE = ""


def on_connect(client, userdata, flags, rc):
    subscribe_to = []
    if rc==0:
        client._easy_log(mqtt.MQTT_LOG_INFO,  "Connected with result code: %s"%str(rc))
        subscribe_to = [ (userdata.config[x]["mqtt_command_topic"], 2) for x in userdata.config ]
        client.subscribe(subscribe_to)
    else:
        client._easy_log(mqtt.MQTT_LOG_ERROR, "Connection error code: %s"%str(rc))

def on_message(client, userdata, msg):
    status = []
    message = ""
    name = userdata.get_name_from_mqtt(msg.topic)
    if msg.payload.decode:
        message = msg.payload.decode()
    userdata.process(name, message)
    status = userdata.act()
    publish.multiple(status, hostname=HOSTNAME, auth={"username":USERNAME, "password":PASSWORD}) 

if __name__=="__main__":
    FORMAT = '[%(levelname)-8s] [%(asctime)s] %(message)s'
    logging.basicConfig(level=logging.DEBUG, format=FORMAT, datefmt="%Y-%m-%dT%H:%M:%S%z")
    logger = logging.getLogger(__name__)
    if "RELAY_CONFIG" in os.environ:
        CONFIG_FILE=os.environ["RELAY_CONFIG"]
    r = RelayBoard(CONFIG_FILE)

    r.set_logger(logger)
    
    client = mqtt.Client(DEFAULT_IDENTITY,clean_session=False, userdata=r)
    client.enable_logger(logger)
    client.on_connect = on_connect
    client.on_message = on_message
    def signal_handler(sig, frame):
        client.unsubscribe("#")
        client.disconnect()
        client.loop_stop()

    if not USERNAME and not PASSWORD:
        if "MQTT_USERNAME" in os.environ and "MQTT_PASSWORD" in os.environ:
            USERNAME = os.environ["MQTT_USERNAME"]
            PASSWORD = os.environ["MQTT_PASSWORD"]
    if USERNAME and PASSWORD:
        client.username_pw_set(USERNAME, PASSWORD)
    if "MQTT_HOST" in os.environ:
        HOSTNAME=os.environ["MQTT_HOST"]
    client.connect(HOSTNAME)
    signal.signal(signal.SIGINT, signal_handler) 
    client.loop_forever()

